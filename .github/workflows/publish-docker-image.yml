name: Publish Docker image

on:
  release:
    types: [created]

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Step 1: Create app, core and captain folders.
        run: mkdir app core captain
    
      - name: Step 2: Checkout pactum-flow-ui repo, build it and copy the contents of dist folder into app folder.
        uses: actions/checkout@v2
        with:
          repository: pactumjs/pactum-flow-ui
        uses: actions/setup-node@v2
            node-version: '14'
            cache: 'npm'
        run: npm install
        run: npm install -g @vue/cli
        run: npm run build
        uses: canastro/copy-file-action@master
        with:
          source: './pactum-flow-ui/dist/*'
          target: 'app'
      
      - name: Step 3: Checkout pactum-flow-api repo and copy the contents of it to core folder.
        uses: actions/checkout@v2
        with:
          repository: pactumjs/pactum-flow-api
        run: cp -r package.json src core
      
      - name: Step 4: Checkout pactum-flow-captain-api repo and copy the contents of it to captain folder.
        uses: actions/checkout@v2
        with:
          repository: pactumjs/pactum-flow-captain-api
        run: cp -r package.json src core

      - name: Step 4: Check out the current(docker-pactum-flow) repo
        uses: actions/checkout@v2
      
      - name: Step 5: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Step 6: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: asaianudeep/pactumjs
      
      - name: Step 7: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}